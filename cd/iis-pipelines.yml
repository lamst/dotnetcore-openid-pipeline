name: $(Build.DefinitionName).$(Rev:r)
variables:
- name: artifactName
  value: 'TodoList.WebApp'
- name: artifactPatterns
  value: '**/*.zip'
  
resources:
  pipelines:
  - pipeline: todo-webapp
    source: \remote\ci\todo-webapp
    project: CloudWorkshopWinRM
    version: 1.0.1.12

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md
    - HELP.md
    include:
    - cd/*
    - self/*

stages:
- stage: 'Test'
  jobs:
  - template: "../self/deploy-iis-website.yml"
    parameters:
      name: 'DeployTodoWebAppToDev2'
      displayName: 'Deploy Todo List WebApp'
      pool:
        name: 'Self Hosted Windows 2019'
      environment: 
        name: 'Test'
        resourceName: 'mcw-dev2'
      appPoolName: 'TodoListAppPool'
      websiteName: 'TodoList'
      websitePhysicalPath: '%SystemDrive%\TodoList'
      bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"8080","hostname":"mcw-dev2","sslThumbprint":"","sniFlag":false}]}'
      pipeline: todo-webapp
      artifactName: ${{ variables.artifactName }}
      artifactPatterns: ${{ variables.artifactPatterns }}
      package: '$(Pipeline.Workspace)/**/${{ variables.artifactName }}/${{ variables.artifactPatterns }}'

- stage: 'Staging'
  dependsOn: 'Test'
  condition: succeeded()
  variables:
  - name: AzureAd.TodoListBaseAddress
    value: 'http://localhost:8080'
  - name: ASPNETCORE_ENVIRONMENT
    value: 'Production'
  - name: LoggingIncludeScopes
    value: 'True'
  jobs:
  - template: "../self/deploy-iis-website.yml"
    parameters:
      name: 'DeployTodoWebAppToDev4'
      displayName: 'Deploy Todo List WebApp'
      pool:
        name: 'Self Hosted Windows 2019'
      environment: 
        name: 'Staging'
        resourceName: 'mcw-dev4'
      appPoolName: 'TodoListAppPool'
      websiteName: 'TodoList'
      websitePhysicalPath: '%SystemDrive%\TodoList'
      bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"8080","hostname":"mcw-dev4","sslThumbprint":"","sniFlag":false}]}'
      pipeline: todo-webapp
      artifactName: ${{ variables.artifactName }}
      artifactPatterns: ${{ variables.artifactPatterns }}
      package: '$(Pipeline.Workspace)/**/${{ variables.artifactName }}/${{ variables.artifactPatterns }}'
      xmlVariableSubstitution: true
      rootDirectory: '%SystemDrive%\TodoList\'